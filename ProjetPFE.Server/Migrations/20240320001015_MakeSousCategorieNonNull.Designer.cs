// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetPFE.Server.Data;

#nullable disable

namespace ProjetPFE.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240320001015_MakeSousCategorieNonNull")]
    partial class MakeSousCategorieNonNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminUser", b =>
                {
                    b.Property<string>("AdminsUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersUsername")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminsUsername", "UsersUsername");

                    b.HasIndex("UsersUsername");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Admin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DirectionCode_Direction")
                        .HasColumnType("int");

                    b.Property<string>("mot_de_passe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("DirectionCode_Direction");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Agence", b =>
                {
                    b.Property<int>("Code_Agence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code_Agence"));

                    b.Property<int?>("DirectionCode_Direction")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code_Agence");

                    b.HasIndex("DirectionCode_Direction");

                    b.ToTable("Agences");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Categorie", b =>
                {
                    b.Property<string>("Label_Categorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Label_Categorie");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Domaine", b =>
                {
                    b.Property<string>("Nom_Domaine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FamilleNom_Famille")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Nom_Domaine");

                    b.HasIndex("FamilleNom_Famille");

                    b.ToTable("Domaines");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Dre", b =>
                {
                    b.Property<int>("Code_Direction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code_Direction"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Code_Direction");

                    b.ToTable("Dres");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Entreprise", b =>
                {
                    b.Property<int>("Id_Entreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Entreprise"));

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Partie_MiseStatut")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Entreprise");

                    b.HasIndex("Partie_MiseStatut");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Famille", b =>
                {
                    b.Property<string>("Nom_Famille")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Nom_Famille");

                    b.ToTable("Familles");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Fiche", b =>
                {
                    b.Property<int>("Id_incident")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_incident"));

                    b.Property<string>("Categorie_incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Compte_dzd_devise")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilleNom_Famille")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mesures_Prise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Montant_Perte")
                        .HasColumnType("real");

                    b.Property<int?>("Service_DefaillantId_Service")
                        .HasColumnType("int");

                    b.Property<string>("Types_Sous_Comptes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Types_comptes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Types_impacte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_incident");

                    b.HasIndex("FamilleNom_Famille");

                    b.HasIndex("Service_DefaillantId_Service");

                    b.HasIndex("Username");

                    b.ToTable("Fiches");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Partie_mise_en_cause", b =>
                {
                    b.Property<string>("Statut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FicheId_incident")
                        .HasColumnType("int");

                    b.HasKey("Statut");

                    b.HasIndex("FicheId_incident");

                    b.ToTable("Partie_Mise_En_Causes");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Personne", b =>
                {
                    b.Property<int>("Id_Personne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Personne"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Partie_MiseStatut")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Personne");

                    b.HasIndex("Partie_MiseStatut");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Processus", b =>
                {
                    b.Property<string>("Nom_Processus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DomaineNom_Domaine")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Nom_Processus");

                    b.HasIndex("DomaineNom_Domaine");

                    b.ToTable("Processus");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Risque", b =>
                {
                    b.Property<int>("Id_Risque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Risque"));

                    b.Property<int?>("FicheId_incident")
                        .HasColumnType("int");

                    b.Property<string>("Label_Risque")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Sous_CategorieLabel_Sous_Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_Risque");

                    b.HasIndex("FicheId_incident");

                    b.HasIndex("Sous_CategorieLabel_Sous_Categorie");

                    b.ToTable("Risques");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Service", b =>
                {
                    b.Property<int>("Id_Service")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Service"));

                    b.Property<int?>("FicheId_incident")
                        .HasColumnType("int");

                    b.Property<string>("Label_Service")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Service");

                    b.HasIndex("FicheId_incident");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Sous_Categorie", b =>
                {
                    b.Property<string>("Label_Sous_Categorie")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategorieLabel_Categorie")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Label_Sous_Categorie");

                    b.HasIndex("CategorieLabel_Categorie");

                    b.ToTable("Sous_Categories");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgenceCode_Agence")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateNaiss")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motdepasse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Poste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Username");

                    b.HasIndex("AgenceCode_Agence");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdminUser", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Admin", null)
                        .WithMany()
                        .HasForeignKey("AdminsUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetPFE.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Admin", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Dre", "Direction")
                        .WithMany("Admins")
                        .HasForeignKey("DirectionCode_Direction");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Agence", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Dre", "Direction")
                        .WithMany("Agences")
                        .HasForeignKey("DirectionCode_Direction");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Domaine", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Famille", "Famille")
                        .WithMany("Domaines")
                        .HasForeignKey("FamilleNom_Famille");

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Entreprise", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Partie_mise_en_cause", "Partie_Mise")
                        .WithMany("Entreprises")
                        .HasForeignKey("Partie_MiseStatut");

                    b.Navigation("Partie_Mise");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Fiche", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Famille", "Famille")
                        .WithMany("Fiches")
                        .HasForeignKey("FamilleNom_Famille");

                    b.HasOne("ProjetPFE.Server.Models.Service", "Service_Defaillant")
                        .WithMany()
                        .HasForeignKey("Service_DefaillantId_Service");

                    b.HasOne("ProjetPFE.Server.Models.User", "User")
                        .WithMany("Fiches")
                        .HasForeignKey("Username");

                    b.Navigation("Famille");

                    b.Navigation("Service_Defaillant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Partie_mise_en_cause", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Fiche", "Fiche")
                        .WithMany("Partie_Mise_En_Causes")
                        .HasForeignKey("FicheId_incident");

                    b.Navigation("Fiche");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Personne", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Partie_mise_en_cause", "Partie_Mise")
                        .WithMany("Personnes")
                        .HasForeignKey("Partie_MiseStatut");

                    b.Navigation("Partie_Mise");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Processus", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Domaine", "Domaine")
                        .WithMany("Processus")
                        .HasForeignKey("DomaineNom_Domaine");

                    b.Navigation("Domaine");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Risque", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Fiche", "Fiche")
                        .WithMany("Risques")
                        .HasForeignKey("FicheId_incident");

                    b.HasOne("ProjetPFE.Server.Models.Sous_Categorie", "Sous_Categorie")
                        .WithMany("Risques")
                        .HasForeignKey("Sous_CategorieLabel_Sous_Categorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fiche");

                    b.Navigation("Sous_Categorie");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Service", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Fiche", null)
                        .WithMany("Services_Affecter")
                        .HasForeignKey("FicheId_incident");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Sous_Categorie", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Categorie", "Categorie")
                        .WithMany("Sous_Categories")
                        .HasForeignKey("CategorieLabel_Categorie");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.User", b =>
                {
                    b.HasOne("ProjetPFE.Server.Models.Agence", "Agence")
                        .WithMany("Users")
                        .HasForeignKey("AgenceCode_Agence");

                    b.Navigation("Agence");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Agence", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Categorie", b =>
                {
                    b.Navigation("Sous_Categories");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Domaine", b =>
                {
                    b.Navigation("Processus");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Dre", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Agences");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Famille", b =>
                {
                    b.Navigation("Domaines");

                    b.Navigation("Fiches");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Fiche", b =>
                {
                    b.Navigation("Partie_Mise_En_Causes");

                    b.Navigation("Risques");

                    b.Navigation("Services_Affecter");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Partie_mise_en_cause", b =>
                {
                    b.Navigation("Entreprises");

                    b.Navigation("Personnes");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.Sous_Categorie", b =>
                {
                    b.Navigation("Risques");
                });

            modelBuilder.Entity("ProjetPFE.Server.Models.User", b =>
                {
                    b.Navigation("Fiches");
                });
#pragma warning restore 612, 618
        }
    }
}
